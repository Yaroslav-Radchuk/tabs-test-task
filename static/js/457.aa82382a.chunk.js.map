{"version":3,"file":"static/js/457.aa82382a.chunk.js","mappings":"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","sources":["api/fetch.ts","components/chart/ChartComponent.tsx","webpack://backendless-test-task/./src/components/chart/ChartComponent.scss?4140"],"sourcesContent":["const apiKey = '7dbb905490msh0887f9c925874e9p1f07abjsn50a5c1ff4189';\n\nconst movieUrl = 'https://imdb8.p.rapidapi.com/auto-complete?q=game%20of%20thr';\nconst foodUrl = 'https://edamam-food-and-grocery-database.p.rapidapi.com/api/food-database/v2/parser?nutrition-type=cooking&category%5B0%5D=generic-foods&health%5B0%5D=alcohol-free';\nconst currencyUrl = 'https://currency-conversion-and-exchange-rates.p.rapidapi.com/latest?from=USD&to=EUR%2CGBP';\n\nconst movieOptions = {\n  method: 'GET',\n  headers: {\n    'X-RapidAPI-Key': apiKey,\n    'X-RapidAPI-Host': 'imdb8.p.rapidapi.com'\n  }\n};\nconst foodOptions = {\n  method: 'GET',\n  headers: {\n    'X-RapidAPI-Key': apiKey,\n    'X-RapidAPI-Host': 'edamam-food-and-grocery-database.p.rapidapi.com'\n  }\n};\nconst currencyOptions = {\n  method: 'GET',\n  headers: {\n    'X-RapidAPI-Key': apiKey,\n    'X-RapidAPI-Host': 'currency-conversion-and-exchange-rates.p.rapidapi.com'\n  }\n};\n\nexport const getMovie = async () => {\n  try {\n    const response = await fetch(movieUrl, movieOptions);\n    const result = await response.json();\n\n    return result;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getFoodReceipe = async () => {\n  try {\n    const response = await fetch(foodUrl, foodOptions);\n    const result = await response.json();\n\n    return result;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getCurrencyExchange = async () => {\n  try {\n    const response = await fetch(currencyUrl, currencyOptions);\n    const result = await response.json();\n\n    return result;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, registerables } from 'chart.js';\n\nimport { getCurrencyExchange } from '../../api/fetch';\nimport { ChartData } from '../../types/ChartData';\n\nimport './ChartComponent.scss';\n\nconst ChartComponent: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const [currencyData, setCurrencyData] = useState<ChartData | null>(null);\n  const chartLabels = Object.keys(currencyData?.rates || {}).slice(0, 40);\n  const chartData = Object.values(currencyData?.rates || {}).slice(0, 40);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data: ChartData = await getCurrencyExchange();\n        setCurrencyData(data);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (!currencyData) {\n    return null;\n  }\n\n  const filterAndFormatRates = () => {\n    const filteredRates: { [key: string]: number } = {};\n\n    for (const currency in currencyData?.rates) {\n      const rate = currencyData?.rates[currency];\n\n      if (rate <= 4) {\n        filteredRates[currency] = Math.round(rate * 100) / 100;\n      };\n    }\n    return filteredRates;\n  };\n\n  const filteredExchangeRates = filterAndFormatRates();\n\n  ChartJS.register(...registerables);\n\n  return (\n    <>\n      {loading && (\n        <div className=\"loader\">\n          <div className=\"loader__spinner\"></div>\n        </div>\n      )}\n      <div className=\"info\">\n        <div className=\"info__date\">\n          <p className=\"info__date_title\">Date updated:</p>\n          <p className=\"info__date_number\">{currencyData?.date}</p>\n        </div>\n        <div className=\"info__conversion\">\n          <span className=\"info__conversion_euro\">{currencyData.base} </span> \n          conversion to currencies:\n        </div>\n      </div>\n      <div className=\"chart\">\n        <Bar\n          data={{\n            labels: chartLabels,\n            datasets: [\n              {\n                label: currencyData?.base,\n                data: filteredExchangeRates,\n                backgroundColor: [\n                  \"rgba(148, 0, 211, 0.8)\",\n                  \"rgba(250, 192, 19, 0.8)\",\n                  \"rgba(253, 135, 135, 0.8)\",\n                ],\n              },\n            ],\n          }}\n          options={{\n            scales: {\n              y: {\n                type: 'linear',\n                beginAtZero: true,\n              },\n            },\n          }}\n        />\n        <Line\n          data={{\n            labels: chartLabels,\n            datasets: [\n              {\n                label: currencyData?.base,\n                data: filteredExchangeRates,\n                backgroundColor: [\n                  \"rgba(0, 128, 0, 0.8)\",\n                  \"rgba(250, 192, 19, 0.8)\",\n                  \"rgba(253, 135, 135, 0.8)\",\n                ],\n                borderColor: \"rgb(0, 128, 0, 0.5)\",\n              },\n            ],\n          }}\n          options={{\n            scales: {\n              y: {\n                type: 'linear',\n                beginAtZero: true,\n              },\n            },\n          }}\n        />\n          <Doughnut\n            data={{\n              labels: chartLabels,\n              datasets: [\n                {\n                  label: currencyData?.base,\n                  data: chartData,\n                },\n              ],\n            }}\n          />\n      </div>\n    </>\n  );\n};\n\nexport default ChartComponent;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["apiKey","movieOptions","method","headers","foodOptions","currencyOptions","getMovie","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_context","prev","next","fetch","sent","json","abrupt","t0","console","error","stop","apply","arguments","getFoodReceipe","_ref2","_callee2","_context2","getCurrencyExchange","_ref3","_callee3","_context3","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","currencyData","setCurrencyData","chartLabels","Object","keys","rates","slice","chartData","values","useEffect","fetchData","data","finish","filteredExchangeRates","filteredRates","currency","rate","Math","round","filterAndFormatRates","ChartJS","register","_toConsumableArray","registerables","_jsxs","_Fragment","children","_jsx","className","date","base","Bar","labels","datasets","label","backgroundColor","options","scales","y","type","beginAtZero","Line","borderColor","Doughnut"],"sourceRoot":""}