{"version":3,"file":"static/js/314.03439ede.chunk.js","mappings":"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","sources":["api/fetch.ts","components/foodReceipe/FoodReceipe.tsx","webpack://backendless-test-task/./src/components/foodReceipe/FoodReceipe.scss?597d"],"sourcesContent":["const apiKey = 'd5315a5d36msh8222a2698ffc771p1996b7jsna17929fd315d';\n\nconst movieUrl = 'https://imdb8.p.rapidapi.com/auto-complete?q=game%20of%20thr';\nconst foodUrl = 'https://edamam-food-and-grocery-database.p.rapidapi.com/api/food-database/v2/parser?nutrition-type=cooking&category%5B0%5D=generic-foods&health%5B0%5D=alcohol-free';\nconst currencyUrl = 'https://currency-conversion-and-exchange-rates.p.rapidapi.com/latest?from=USD&to=EUR%2CGBP';\n\nconst movieOptions = {\n  method: 'GET',\n  headers: {\n    'X-RapidAPI-Key': apiKey,\n    'X-RapidAPI-Host': 'imdb8.p.rapidapi.com'\n  }\n};\nconst foodOptions = {\n  method: 'GET',\n  headers: {\n    'X-RapidAPI-Key': apiKey,\n    'X-RapidAPI-Host': 'edamam-food-and-grocery-database.p.rapidapi.com'\n  }\n};\nconst currencyOptions = {\n  method: 'GET',\n  headers: {\n    'X-RapidAPI-Key': apiKey,\n    'X-RapidAPI-Host': 'currency-conversion-and-exchange-rates.p.rapidapi.com'\n  }\n};\n\nexport const getMovie = async () => {\n  try {\n    const response = await fetch(movieUrl, movieOptions);\n    const result = await response.json();\n\n    return result;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getFoodReceipe = async () => {\n  try {\n    const response = await fetch(foodUrl, foodOptions);\n    const result = await response.json();\n\n    return result;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getCurrencyExchange = async () => {\n  try {\n    const response = await fetch(currencyUrl, currencyOptions);\n    const result = await response.json();\n\n    return result;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import { useEffect, useState } from 'react';\n\nimport { getFoodReceipe } from '../../api/fetch';\nimport { FoodDataType } from '../../types/FoodData';\n\nimport './FoodReceipe.scss';\n\nconst FoodReceipe = () => {\n  const [foodData, setFoodData] = useState<FoodDataType[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getFoodReceipe();\n        setFoodData(data.hints);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      {loading && (\n        <div className=\"loader\">\n          <div className=\"loader__spinner\"></div>\n        </div>\n      )}\n      <div className=\"cards\">\n        {foodData?.map(item => {\n          return (\n            <div key={`${item.food.foodId}`} className=\"card\">\n              {item.food.image ? (\n                <img\n                  className=\"card__image\"\n                  src={item.food.image}\n                  alt=\"food image\"\n                />\n              ) : (\n                <img\n                  className=\"card__image card__image_default\"\n                  src=\"https://user-images.githubusercontent.com/83658914/117029417-3c4a4580-acc4-11eb-95f9-0f3805b6c430.png\"\n                  alt=\"food image\"\n                />\n              )}\n              <h1 className=\"card__title\">{item.food.label}</h1>\n              <span className=\"card__label\">\n                Label:\n                <p className=\"card__paragraph\">{item.food.categoryLabel}</p>\n              </span>\n              <span className=\"card__label\">\n                Category:\n                <p className=\"card__paragraph\">{item.food.category}</p>\n              </span>\n              <h2 className=\"card__title\">Nutrients</h2>\n              <ul className=\"card__list\">\n                <li className=\"card__list-label\">\n                  <p className=\"card__list-title\">Energy (kcal):</p>\n                  {item.food.nutrients.ENERC_KCAL}\n                </li>\n                <li className=\"card__list-label\">\n                  <p className=\"card__list-title\">Protein:</p>\n                  {item.food.nutrients.PROCNT}\n                </li>\n                <li className=\"card__list-label\">\n                  <p className=\"card__list-title\">Fat:</p>\n                  {item.food.nutrients.FAT}g\n                </li>\n              </ul>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default FoodReceipe;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["apiKey","movieOptions","method","headers","foodOptions","currencyOptions","getMovie","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_context","prev","next","fetch","sent","json","abrupt","t0","console","error","stop","apply","arguments","getFoodReceipe","_ref2","_callee2","_context2","getCurrencyExchange","_ref3","_callee3","_context3","_useState","useState","_useState2","_slicedToArray","foodData","setFoodData","_useState3","_useState4","loading","setLoading","useEffect","fetchData","data","hints","finish","_jsxs","_Fragment","children","_jsx","className","map","item","food","image","src","alt","label","categoryLabel","category","nutrients","ENERC_KCAL","PROCNT","FAT","concat","foodId"],"sourceRoot":""}